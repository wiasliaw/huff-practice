/* Interface */
#define function set(uint256) nonpayable returns ()
#define function get() view returns (uint256)

/* Storage */
#define constant VALUE_LOCATION = FREE_STORAGE_POINTER()

/* Method */
#define macro FN_SET() = takes (0) returns (0) {
    0x04 calldataload // [value]
    [VALUE_LOCATION]  // [ptr value]
    sstore            // []
}

#define macro FN_GET() = takes (0) returns (0) {
    [VALUE_LOCATION]  // [ptr]
    sload             // [value]
    0x00              // [0 value]
    mstore            // [], mem[0]=value
    0x20              // [32]
    0x00              // [0 32]
    return            // []
}

/* Constructor */
#define macro SIMPLE_CONSTRUCTOR() = takes (0) returns (0) {
    // copy constructor data to memory
    0x20      // [size]
    0x20      // [0x20 size]
    codesize  // [codesize 0x20 size]
    sub       // [offset size]
    0x00      // [0x00 0ffset size]
    codecopy  // []

    // load
    0x00             // [0x00]
    mload            // [value]
    [VALUE_LOCATION] // [ptr value]
    sstore           // []
}

/* Main */
#define macro SIMPLE_MAIN() = takes (1) returns (1) {
    // input stack: [selector]

    // match set
    dup1             // [selector selector]
    __FUNC_SIG(set)  // [set selector selector]
    eq               // [eq_bool selector]
    set_region jumpi // [selector], jump to set_region

    // match get
    dup1             // [selector selector]
    __FUNC_SIG(get)  // [get_selector selector selector]
    eq               // [success, selector]
    get_region jumpi // [selector], jump to get_region

    // fallback -> revert
    0x00 0x00 revert

    // regions
    set_region:
        FN_SET()
    get_region:
        FN_GET()
}
